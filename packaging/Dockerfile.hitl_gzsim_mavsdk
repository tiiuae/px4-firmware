#image for arm64(raspberry pi5)
#docker buildx build --platform linux/arm64 --build-arg platform=docker.io/ros:humble-ros-base            -t local_hitl_gzsim_server_arm64  -f px4-firmware/packaging/Dockerfile.hitl_gzsim_mavsdk .
#image for x86
#docker buildx build                        --build-arg platform=ghcr.io/tiiuae/gz-sim-server:sha-954fefc -t local_hitl_gzsim_server_x86    -f px4-firmware/packaging/Dockerfile.hitl_gzsim_mavsdk .
#-------------------------------------------------------------

ARG platform_x86=ghcr.io/tiiuae/gz-sim-server:sha-954fefc
ARG platform_raspi5=docker.io/ros:humble-ros-base
ARG platform

FROM docker.io/ros:humble-ros-base as builder
ARG platform_x86=ghcr.io/tiiuae/gz-sim-server:sha-954fefc
ARG platform_raspi5=docker.io/ros:humble-ros-base
ARG platform

# Install build dependencies
RUN apt update
RUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt install -y \
	git \
	curl \
	lsb-release \
	gnupg \
	astyle \
	build-essential \
	cmake \
	cppcheck \
	file \
	g++ \
	gcc \
	gdb \
	git \
	lcov \
	libfuse2 \
	libxml2-dev \
	libxml2-utils \
	make \
	ninja-build \
	python3 \
	python3-dev \
	python3-pip \
	python3-setuptools \
	python3-wheel \
	rsync \
	shellcheck \
	unzip \
	ros-humble-fastrtps \
	ros-humble-rmw-fastrtps-cpp \
	fastddsgen \
	wget \
	libboost-filesystem-dev

RUN curl http://packages.osrfoundation.org/gazebo.key | apt-key add -
RUN sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'

RUN wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null

RUN apt update
RUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt install -y \
	gz-harmonic

RUN if [ ${platform} = ${platform_x86} ]; then \
	wget --no-check-certificate  https://github.com/mavlink/MAVSDK/releases/download/v1.3.1/libmavsdk-dev_1.3.1_ubuntu20.04_amd64.deb && \
	dpkg -i libmavsdk-dev_1.3.1_ubuntu20.04_amd64.deb && \
	rm libmavsdk-dev_1.3.1_ubuntu20.04_amd64.deb; \
    fi

RUN if [ ${platform} = ${platform_raspi5} ]; then \
	wget --no-check-certificate  https://github.com/mavlink/MAVSDK/releases/download/v1.3.1/libmavsdk-dev_1.3.1_debian11_arm64.deb && \
	dpkg -i libmavsdk-dev_1.3.1_debian11_arm64.deb && \
	rm libmavsdk-dev_1.3.1_debian11_arm64.deb; \
    fi

# Copy source from host
COPY px4-firmware px4-firmware
RUN python3 -m pip install -r px4-firmware/Tools/setup/requirements.txt
RUN cp px4-firmware/packaging/build_px4_hitl_gzsim_mavsdk.sh ./build.sh
RUN ./build.sh


FROM ${platform}
ARG platform
ARG platform_x86=ghcr.io/tiiuae/gz-sim-server:sha-954fefc
ARG platform_raspi5=docker.io/ros:humble-ros-base

RUN apt update
RUN apt install -y \
	curl \
	wget \
	lsb-release \
	gnupg \
	python3 \
	python3-dev \
	python3-pip \
	python3-setuptools \
	python3-wheel \
	libboost-filesystem-dev \
	microcom \
	nano

RUN if [ ${platform} = ${platform_x86} ]; then \
	wget --no-check-certificate  https://github.com/mavlink/MAVSDK/releases/download/v1.3.1/libmavsdk-dev_1.3.1_ubuntu20.04_amd64.deb && \
	dpkg -i libmavsdk-dev_1.3.1_ubuntu20.04_amd64.deb && \
	rm libmavsdk-dev_1.3.1_ubuntu20.04_amd64.deb; \
    fi

RUN if [ ${platform} = ${platform_raspi5} ]; then \
	curl https://packages.osrfoundation.org/gazebo.gpg --output /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg && \
	echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null && \
	apt-get update && \
	apt-get install -y gz-harmonic uhubctl ; \
	wget --no-check-certificate  https://github.com/mavlink/MAVSDK/releases/download/v1.3.1/libmavsdk-dev_1.3.1_debian11_arm64.deb && \
	dpkg -i libmavsdk-dev_1.3.1_debian11_arm64.deb && \
	rm libmavsdk-dev_1.3.1_debian11_arm64.deb; \
    fi

COPY px4-firmware/packaging/entrypoint_hitl_gzsim_mavsdk.sh /px4-firmware/entrypoint.sh
COPY px4-firmware/Tools/setup/requirements.txt /px4-firmware/Tools/setup/requirements.txt
COPY px4-firmware/Tools/mavlink_ulog_streaming.py /px4-firmware/Tools/mavlink_ulog_streaming.py
RUN python3 -m pip install -r /px4-firmware/Tools/setup/requirements.txt
RUN python3 -m pip install brainstem

WORKDIR /px4-firmware

COPY --from=builder /px4-firmware/build/px4_sitl_default /px4-firmware/build/px4_sitl_default
COPY --from=builder /px4-firmware/test/mavsdk_tests /px4-firmware/test/mavsdk_tests
COPY --from=builder /px4-firmware/Tools/simulation/gz /px4-firmware/Tools/simulation/gz

ENTRYPOINT [ "/px4-firmware/entrypoint.sh" ]

CMD [ "echo", "Available scripts for run: ./Tools/simulation/gz/hitl_run.sh and test/mavsdk_tests/mavsdk_test_runner.py" ]
